name: Github Actions

on:
  push:
    branches: [qa]
    paths-ignore:
      - 'README.md'

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:

  build_the_app:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout your repository using git
      uses: actions/checkout@v4

    - name: Copy file for Master branch
      if: github.ref == 'refs/heads/master'
      run: |
        if [ -f astro.config.render-prod.mjs ]; then
          echo "$github.ref"
          echo "Found master config"
          cp -R ${{ github.workspace }}/config/astro.config.render-prod.mjs ${{ github.workspace }}/astro.config.mjs
          echo "Copied master-config."
        else
          echo "File not found!"
          exit 0
        fi

    - name: Copy file for QA branch
      if: github.ref == 'refs/heads/qa'
      run: |
        if [ -f astro.config.github.mjs ]; then
          echo "$github.ref"
          echo "Found qa config"
          cp -R ${{ github.workspace }}/config/astro.config.github.mjs ${{ github.workspace }}/astro.config.mjs
          echo "Copied qa-config."
        else
          echo "File not found!"
          exit 0
        
    # - name: Copy files from source to destination
    #   run: |
    #     cp -R ${{ github.workspace }}/config/astro.config.github.mjs ${{ github.workspace }}/astro.config.mjs

    - name: Install, build, and upload your site output
      uses: withastro/action@v2
      with:
        path: . # The root location of your Astro project inside the repository. (optional)
        node-version: 20 # The specific version of Node that should be used to build your site. Defaults to 18. (optional)
        package-manager: npm@latest # The Node package manager that should be used to install dependencies and build your site. Automatically detected based on your lockfile. (optional)

  deploy_the_app:
    needs: build_the_app
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  docker_build_push:
    needs: deploy_the_app
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASS_TOKEN }}
      DOCKER_IMAGE_NAME: cdops
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

    - name: Build Docker image
      run: docker build -t "${DOCKER_USERNAME}"/"${DOCKER_IMAGE_NAME}":$GITHUB_RUN_NUMBER . && docker push "${DOCKER_USERNAME}"/"${DOCKER_IMAGE_NAME}":$GITHUB_RUN_NUMBER

    - name: Push Docker image to Docker Hub
      run: docker tag "${DOCKER_USERNAME}"/"${DOCKER_IMAGE_NAME}":$GITHUB_RUN_NUMBER "${DOCKER_USERNAME}"/"${DOCKER_IMAGE_NAME}":latest && docker push "${DOCKER_USERNAME}"/"${DOCKER_IMAGE_NAME}":latest

    - name: Listing images and Containers.
      run: docker images && docker ps -a

    - name: Docker Logout
      run: docker logout
